package org.rambosoft.tomatoTodo.dao.DbConfig;

import org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.jdbc.DataSourceBuilder;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
import org.springframework.orm.jpa.JpaTransactionManager;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.annotation.EnableTransactionManagement;

import javax.persistence.EntityManagerFactory;
import javax.sql.DataSource;

/**
 * Created by Administrator on 2018-04-27.
 */
@Configuration
@EnableTransactionManagement
@EnableJpaRepositories(entityManagerFactoryRef = "readEntityManagerFactory",
transactionManagerRef = "readTransactionManager",
basePackages = {"org.rambosoft.tomatoTodo.dao.repository"})
public class MyReadDbConfig {
    @Bean(name="readDataSource")
    @ConfigurationProperties(prefix="read.datasource")
    public DataSource dataSource()
    {
        return DataSourceBuilder.create().build();
    }

    @Bean(name="readEntityManagerFactory")
    public LocalContainerEntityManagerFactoryBean readEntityManagerFactory(
            EntityManagerFactoryBuilder builder,
            @Qualifier("readDataSource") DataSource dataSource)
    {
        return builder.dataSource(dataSource).packages("org.rambosoft.tomatoTodo.dao.Entity")
                .persistenceUnit("read")
                .build();
    }

    @Bean(name="readTransactionManager")
    public PlatformTransactionManager readTransactionManager(
            @Qualifier("readEntityManagerFactory")EntityManagerFactory readEntityManagerFactory)
    {
       return new JpaTransactionManager(readEntityManagerFactory);
    }

}
